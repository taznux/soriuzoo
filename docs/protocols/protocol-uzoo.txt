----
 우주 Uzoo Protocol Specification
 
 $Id$

Copyright(C) 2002 Uzoo Project, SourceForge.


0. 전체구조

   1) 게이트웨이 얻어옴
   2) 게이트웨이에 로그인해서 서버들 URL과 IP정보들을 얻어옴
   3) ASR서버에서 클라이언트들의 주소들 (보통 7000개 정도)을 얻어옴
   4) 클라이언트 전체에 UDP로 검색 패킷을 날림 (보통 9001포트)
   5) 돌아오는 패킷들을 파싱해서 결과를 보여줌. (UDP)
   6) 돌아오는 패킷에 담겨있는 다운로드 정보를 토대로 다운로드 (TCP)

1. 게이트웨이 얻어오기

  맨 처음으로 http://www.soribada.com/gateway.txt 를 받아온다.
  gateway.txt문서는 다음과 같이 되어있다.
  
-- 시작 
Version : 1.00
IS=http://211.233.14.151/soribada.phtml
-- 끝

  여기서 IS뒤의 URL을 로그인 게이트웨이로 지정한다.


2. 로그인

  로그인 게이트웨이에 GET메소드로 다음과 같은 웹 문서를 가져온다.
  
  위의 경우에
  http://211.233.14.151/soribada.phtml?username={계정}&password={비번}&version={버젼}
  
  현재 소리바다 최근 버젼은 1.94이고, 계정과 비번은 암호화 하지 않고 그냥 보낸다.

  로그인이 성공하는 경우에 다음과 같은 문서를 받을 수 있다.
  
-- 시작
Version : 1.00
ADDON BEGIN
SN=핸드폰
SI=http://www.soribada.com/mobile.html
SS=
ADDON END
ASR
http://211.233.14.153/service/bada.phtml
ACH
http://211.119.136.160/sori.phtml
ACO
http://211.233.14.151/soribada.phtml
MYTM
020128
MYIP
211.187.5.43

PI
2400
CI
240
COVER
http://www.soribada.com/members/
COVERZIP
http://www.soribada.com/homepage.cov
31265

UPGRADE
1.94
http://www.soribada.com/soribada194beta.exe
1628672

ROOMTYPE BEGIN
일반
방송
언더
옛노래
클래식
Rock
종교
잡담
기타
ROOMTYPE END
---- 끝

  여기서 아직 다른 것은 처리하지 않고, 
ASR
http://211.233.14.153/service/bada.phtml
  부분에서 ASR을 받아오고, 
MYIP
211.187.5.43
  부분에서 IP를 받아온다. IP는 파이어월이 중간에 끼여있는 경우에
  소리바다에서 알려준 IP를 쓰는 편이 유리하다.

  로그인에 실패한 경우에는 다음과 같은 결과가온다.
---- 시작
Return Code : 101 Incorrect username 
---- 끝

3. ASR 주소 받아오기
  
  이제 앞에서 받아온 ASR URL을 통해서 검색 클라이언트들의 목록을
  받아와야하는데, URL은 다음과 같이 이뤄진다.
  
  {ASR}?action=gimme&username={계정}&password={비밀번호}
  
  (ASR은 위에서 받아온 URL)
  
  이 문서를 받아오면, 바이너리로 전체 클라이언트의 IP와 포트번호가
  담겨있는데, 대체로 6바이트 블럭이지만 아직 파싱이 모두 성공하지는
  못하고 있다.


4. ASR 파싱 (IP/포트 언패킹)
  
  ASR문서의 처음은 Version: 1.0으로 시작하는데,
  \r\n\r\n이 지나고 나서 바로 다음부터 데이터가 시작하고 앞에서
  말한대로 대체로 6바이트 블럭이다.
  
  포트  인코딩  IP두번째  IP네번째  IP세번째  IP처음
  
  포트는 9000번을 기준으로 해서 9001번 포트는 0x01,
  9010번 포트는 0x0a 같이 포트번호에서 9000을 뺀 값이 들어간다.
  그 다음, 인코딩에 들어가있는 코드에 따라서 IP를 암호화하는 방식이
  달라지는데, 지금까지 파싱에 성공한 것은 4, 8, 12이며, 이 세가지만
  파싱해도 전체의 95%이상을 파싱할 수 있다. (나머지는 연구중 -.-;)
  
  디코딩 규칙은 다음과 같다:
  
     4  :  (x ^ 1 + 164) % 256
     8  :  (x ^ 3 + 192) % 256
     12 :  (x ^ 7 + 112) % 256
   
  (여기서 ^는 제곱이 아니라 C나 파이썬에서처럼 XOR기호.)
  
  결국 이렇게 되므로 예시로 다음을 디코딩해보면..
  
   1   8   72   16   2   54      (10진법)
  
  우선, 포트번호는 9001임을 알 수 있고,
  인코딩이 8이므로, (x ^ 3 + 192) % 256 으로 디코딩하면 된다.
  
  따라서, 뒤의 네 숫자는 각각 139  211  193  245 가 되어서
  최종적으로 순서를 정렬해보면  245.139.193.211의 9001번 포트임을
  알 수 있다. (순서는 저 위에 참조.)
  
  마찬가지로 4, 12의 경우도 디코딩 식만 바꾸면 같음.
  그런데, 간혹 4,8,12외의 다른 숫자가 오기도 하는데, 이런 경우에
  6바이트 블럭이 아닌 경우도 있으므로 4,8,12가 아닌 경우엔 다음
  1을 찾아서 1을 블럭의 시작으로 보고 계속 파싱을 하는 방법으로
  현재는 구현되어있다.


5. 검색 패킷 만들어서 보내기

  검색패킷은 UDP이며, 다음과 같은 구조로 되어있다.
  
  0x01 {자기주소} {카운트} 0x51 0x3a {검색식}
  
  (띄어쓰기와 괄호는 그냥 쓴것이고 실제로는 띄어쓰기 같은것 안함)
  
  {자기주소}: 자기 주소를 위에서 말했던 패킷인코딩 방식으로 팩해서 보냄
              팩하는 방법은 4번 인코딩을 이용하며, 순서는 역으로 하면 됨.
              (풀어서 원래 IP가 나오게, 순서는 3 0 2 1) 물론 6바이트
  {카운트}: 리틀엔디안방삭으로 2바이트 정수형으로 보냄.
            1이 아니라 61부터 시작하며, 한명에게 보내면서 1씩 증가하면 됨.
  {검색식}: 검색식은 각 단어 앞에 +를 붙이고 다른 단어와 사이에 \n을 넣음
            따라서, ryoko hirosue jeans 를 찾는 다면 검색식은
            +ryoko\n+hirosue\n+jeans\n 가 됨.

6. 응답 패킷 파싱하기

  응답 패킷도 UDP로 날아오며, 보낼때 자기주소를 쓴 곳으로 날아온다.
  그런데, 파이어월을 통과하려면 보낼때 그 포트를 사용해야 받기가
  수월하므로 가급적이면 9001번 포트를 바인딩해서 그 포트를 이용해서
  보내고, 받을때도 그리고 받는 편이 좋다.
  
  받은 패킷 구조:
  
  0x01 {받을수있는주소} {카운트} 0x52 0x3a {결과}
  
  받을 수 있는 주소 역시 위의 인코딩중의 하나로 날아온다.
  같은 방법으로 파싱하면 되고, 카운트는 검색식을 보낼때 보낸 카운트가
  역으로 날아오며, 결과는 \n으로 터미네이트 되지면 \r\n도 마구 섞여서
  사용되므로 미리 \r은 제거하는 것이 편하며, 첫번째 두줄은 각각 검색
  결과를 보낸 사람의 ID와 다운로드 포트 (위의 인코딩된 주소의 포트번호
  대신 이 포트번호를 사용해야함)가 포함되어있고
  그 뒤 부터는 내용 본문이 오는데, 각 내용의 딜리미터는 \r\n\r\n이다.
  내용은 각각 다른 줄로 (\n)으로 넘어오며, 두줄을 띄우지는 않는다.
  각 데이터의 순서는 다음과 같음
  
   경로 (도스 풀패스 형식)
   크기 (바이트단위)
   길이 (11:11 형식)
   비트레이트 (160 같이 kbps숫자만, 물론 VBR도 있음)
   가수
   노래제목
   

7. 노래 다운로드
  
  위에서 리턴 패킷이 211.123.123.123:9001이고 다운로드포트가 9002 였다면
  다운로드하려고 접속은 211.123.123.123:9002에 접속해야한다.
  
  TCP로 접속한 후, 다음 내용을 날리면 된다.

GETMP3\r\nFilename: {파일풀패스}\r\nPosition: 0\r\nPortM: 9999\r\nUsername: {유저네임}\r\n\r\n

  반드시 \r\n을 써야하며 끝에는 \r\n\r\n이렇게 두줄을 띄워준다.
  파일 풀패스는 앞에서 결과로 날아온 그대로 보내주면 되며,
  Position은 이어받기 하고 싶은 경우엔 중간부터 받아도 된다.
  PortM은 아직 무슨 역할을 하는지 알지 못하며,
  Username은 자기 계정을 집어넣으면 된다.
  
  그러면 그 결과로
  Return : 000 Suceded\r\nFilesize: 2222222\r\n\r\n
  이런것이 날아오는데 (Suceded는 스펠링이 틀리게 들어옴)그 다음부터는
  다 생짜 데이터이므로 mp3로 저장하면 된다. 물론, 헤더가 더 길게
  올 수도 있으므로 반드시 내용 시작은 두줄 띄운 지점 부터이다.
  
  그 외에 Return : 100 User Limit 같은 에러메시지가 올 수도 있다.
  

