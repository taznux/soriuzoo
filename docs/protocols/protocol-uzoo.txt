----
 우주 Uzoo Protocol Specification
 
 $Id$

Copyright(C) 2002 Uzoo Project, SourceForge.

이 문서는 소스포지 프로젝트인 '우주'의 일환으로 작성되었으며,
'우주' 프로젝트의 홈페이지에 제시되어있는 저작권하에 사용가능합니다.
---


0. 전체구조

   1) 게이트웨이 얻어옴
   2) 게이트웨이에 로그인해서 서버들 URL과 IP정보들을 얻어옴
   3) ASR서버에서 클라이언트들의 주소들 (보통 7000개 정도)을 얻어옴
   4) 클라이언트 전체에 UDP로 검색 패킷을 날림 (보통 9001포트)
   5) 돌아오는 패킷들을 파싱해서 결과를 보여줌. (UDP)
   6) 돌아오는 패킷에 담겨있는 다운로드 정보를 토대로 다운로드 (TCP)


1. 게이트웨이 얻어오기

  맨 처음으로 http://www.soribada.com/gateway.txt 를 받아온다.
  gateway.txt문서는 다음과 같이 되어있다.
  
-- 시작 
Version : 1.00
IS=http://211.233.14.151/soribada.phtml
-- 끝

  여기서 IS뒤의 URL을 로그인 게이트웨이로 지정한다.


2. 로그인

  로그인 게이트웨이에 GET메소드로 다음과 같은 웹 문서를 가져온다.
  
  위의 경우에
  http://211.233.14.151/soribada.phtml?username={계정}&password={비번}&version={버젼}
  
  현재 소리바다 최근 버젼은 1.94이고, 계정과 비번은 암호화 하지 않고 그냥 보낸다.

  로그인이 성공하는 경우에 다음과 같은 문서를 받을 수 있다.
  
-- 시작
Version : 1.00
ADDON BEGIN
SN=핸드폰
SI=http://www.soribada.com/mobile.html
SS=
ADDON END
ASR
http://211.233.14.153/service/bada.phtml
ACH
http://211.119.136.160/sori.phtml
ACO
http://211.233.14.151/soribada.phtml
MYTM
020128
MYIP
211.187.5.43

PI
2400
CI
240
COVER
http://www.soribada.com/members/
COVERZIP
http://www.soribada.com/homepage.cov
31265

UPGRADE
1.94
http://www.soribada.com/soribada194beta.exe
1628672

ROOMTYPE BEGIN
일반
방송
언더
옛노래
클래식
Rock
종교
잡담
기타
ROOMTYPE END
---- 끝

  여기서 아직 다른 것은 처리하지 않고, 
ASR
http://211.233.14.153/service/bada.phtml
  부분에서 ASR을 받아오고, 
MYIP
211.187.5.43
  부분에서 IP를 받아온다. IP는 파이어월이 중간에 끼여있는 경우에
  소리바다에서 알려준 IP를 쓰는 편이 유리하다.

  로그인에 실패한 경우에는 다음과 같은 결과가온다.
---- 시작
Return Code : 101 Incorrect username 
---- 끝

3. ASR 주소 받아오기
  
  이제 앞에서 받아온 ASR URL을 통해서 검색 클라이언트들의 목록을
  받아와야하는데, URL은 다음과 같이 이뤄진다.
  
  {ASR}?action=gimme&username={계정}&password={비밀번호}
  
  (ASR은 위에서 받아온 URL)
  
  이 문서를 받아오면, 바이너리로 전체 클라이언트의 IP와 포트번호가
  담겨있는데, 대체로 6바이트 블럭이지만 아직 파싱이 모두 성공하지는
  못하고 있다.


4. ASR 파싱 (IP/포트 언패킹)
  
 * 이 부분에서 부족한 점을 보충 설명해 주신 소리받아 프로젝트의 최환진님께
   감사드립니다.

  ASR문서의 처음은 Version: 1.0으로 시작하는데,
  \r\n\r\n이 지나고 나서 바로 다음부터 데이터가 시작하고 앞에서
  말한대로 대체로 6바이트 블럭이다.
  
  포트,매직넘버  IP두번째  IP네번째  IP세번째  IP처음
  
  포트와 매직넘버는 2바이트로 한꺼번에 뭉쳐져 있으며, 다음과 같은 배치로
  되어있다.
  
   PPPPPPPP xxxxEEpp
  
  P는 포트번호인데, 앞의 8비트가 하위비트가 되고 상위비트로 뒤의 2비트가
  들어가므로 풀어쓰면 ppPPPPPPPP 이 되는데 이 값에 9000을 더해서 사용한다.
  따라서, 포트번호는 결국
   
   앞 바이트가 p1, 뒷 바이트가 p2라면,
    
    p1 + (p2 & 3)<<8 + 9000
    
   이 된다.
   
  그리고, 매직넘버 EE는 IP를 인코딩하는 방식을 지정해 주는데, 00은 없고,
  01, 10, 11 세가지 경우가 있다.
  
   01 :  x ^ 0xA5
   10 :  x ^ 0xC3
   11 :  x ^ 0x77
   
  (여기서 ^는 XOR)
  
  결국 이렇게 되므로 예시로 다음을 디코딩해보면..
  
   1   8   72   16   2   54      (10진법)
  
  우선, 포트번호는 9001임을 알 수 있고,
  8이므로 00001000이 되어서 매직넘버는 10이다. 따라서 x ^ 0xC3을 써서 계산하면
  뒤의 네 숫자는 각각 139  211  193  245 가 되어서
  최종적으로 순서를 정렬해보면  245.139.193.211의 9001번 포트임을
  알 수 있다. (순서는 저 위에 참조.)
  
  그리고, 나머지 xxxx 4비트는 XOR을 하지 않을 곳을 정해주는 건데,
  만약 xxxx가 0100이라면 뒤에서 두번째에 나온 것을 매직넘버를 사용하지 않고
  디코딩한다. 각각 거꾸로 된 (디코딩 되기 전의) 순서를 가리키므로
  만약 1010 이고 IP부분이 0x17 0x81 0x0b 0xaf 라고 들어왔다면,
  0xaf와 0x81은 매직넘버를 사용하지 않고 디코딩하고, 0x0b와 0x17은 정상적으로
  매직넘버를 사용해서 디코딩한다.
  
  예제)
     01 0c 0f a4 87 bf    (16진법)
     
       이 경우엔, 포트가 9001이 되고, 매직넘버는 11이고 예외는 없다.
       따라서, 0x77로 XOR해서 풀면, 120 211 240 200 이 되어서, 순서를
       정렬하면 200.120.240.211의 9001번 포트가 된다.
     
     8e a5 14 a9 01 48
     
       포트는 앞의 8e와 뒤의 a5를 & 3하면 1이 와서 9143이 포트가 된다.
       매직넘버는 01이고, 따라서 0xA5로 XOR을 하게 되는데 (여기서 0xA5는
       패킷의 두번째 0xA5가 아니라 위의 매직넘버 테이블의 XOR 값이다.)
       앞의 예외값이 a이므로 2진법으로는 1010이므로 뒤에서 첫번째인 48과
       세번째인 a9를 디코딩 하지 않는다. 따라서, 풀어보면
       
        177 169 164 72
       
       따라서, 72.177.164.169의 9143포트이다.


5. 검색 패킷 만들어서 보내기

  검색패킷은 UDP이며, 다음과 같은 구조로 되어있다.
  
  0x01 {자기주소} {카운트} 0x51 0x3a {검색식}
  
  (띄어쓰기와 괄호는 그냥 쓴것이고 실제로는 띄어쓰기 같은것 안함)
  
  {자기주소}: 자기 주소를 위에서 말했던 패킷인코딩 방식으로 팩해서 보냄
              팩하는 방법은 4번 인코딩을 이용하며, 순서는 역으로 하면 됨.
              (풀어서 원래 IP가 나오게, 순서는 3 0 2 1) 물론 6바이트
  {카운트}: 리틀엔디안방삭으로 2바이트 정수형으로 보냄.
            0부터 시작하며, 한명에게 보내면서 1씩 증가하면 됨. 그리고, 검색
            할 때 마다 새로 0부터 시작하지 않고 다음 검색때도 계속 증가하여
            FFFF까지 간 다음에 0이 된다.
  {검색식}: 검색식은 각 단어 앞에 +를 붙이고 다른 단어와 사이에 \n을 넣음
            따라서, ryoko hirosue jeans 를 찾는 다면 검색식은
            +ryoko\n+hirosue\n+jeans\n 가 됨.

6. 응답 패킷 파싱하기

  응답 패킷도 UDP로 날아오며, 바로 그 패킷에 응답하므로, 보낼 때 바인딩한
  포트에 바로 보내준다. 9001번 포트를 이용해서 보냈다면 응답도 9001번 포트로
  온다.
  
  받은 패킷 구조:
  
  0x01 {받을수있는주소} {카운트} 0x52 0x3a {결과}
  
  받을 수 있는 주소 역시 위의 인코딩중의 하나로 날아온다.
  같은 방법으로 파싱하면 되고, 카운트는 검색식을 보낼때 보낸 카운트가
  역으로 날아오며, 첫번째 두줄은 각각 검색 결과를 보낸 사람의 ID와
  다운로드 포트 (위의 인코딩된 주소의 포트번호 대신 이 포트번호를
  사용해야함)가 포함되어있고, 그 뒤 부터는 내용 본문이 오는데,
  각 노래 정보는 \n\r\n으로 구분되고, 노래 안의 정보는 \n으로 구분된다.
  각 데이터의 순서는 다음과 같음
  
   경로 (도스 풀패스 형식)
   크기 (바이트단위)
   길이 (11:11 형식)
   비트레이트 (160 같이 kbps숫자만, 물론 VBR도 있음)
   가수
   노래제목
   코멘트
   알 수 없는 뭔가
   
   
  알 수 없는 뭔가는, 최환진님의 말씀으로는, 주로 빈칸이 오고,
  0, 2, 4등의 숫자가 오기도 한다고 한다.
   

7. 노래 다운로드
  
  위에서 리턴 패킷이 211.123.123.123:9001이고 다운로드포트가 9002 였다면
  다운로드하려고 접속은 211.123.123.123:9002에 접속해야한다.
  
  TCP로 접속한 후, 다음 내용을 날리면 된다.

GETMP3\r\nFilename: {파일풀패스}\r\nPosition: 0\r\nPortM: 9999\r\nUsername: {유저네임}\r\n\r\n

  반드시 \r\n을 써야하며 끝에는 \r\n\r\n이렇게 두줄을 띄워준다.
  파일 풀패스는 앞에서 결과로 날아온 그대로 보내주면 되며,
  Position은 이어받기 하고 싶은 경우엔 중간부터 받아도 된다.
  PortM은 아직 무슨 역할을 하는지 알지 못하며,
  Username은 자기 계정을 집어넣으면 된다.
  
  그러면 그 결과로
  Return : 000 Succeded\r\nFilesize: 2222222\r\n\r\n
  이런것이 날아오는데 (Succeded는 스펠링이 틀린 것이 맞음)그 다음부터는
  다 생짜 데이터이므로 mp3로 저장하면 된다. 물론, 헤더가 더 길게
  올 수도 있으므로 반드시 내용 시작은 두줄 띄운 지점 부터이다.
  
  그 외에 다른 리턴코드가 올 수도 있는데, 목록은:
        000     Succeded
        100     User Limit
        102     File Not Found
        103     Invalid Command

  그리고, 유저가 끊는 상황에는 아무 알림 없이 끊어버리므로, 미리 예외처리를
  해야한다.
